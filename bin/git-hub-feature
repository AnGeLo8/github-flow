#!/bin/bash

source git-hub-helpers

start(){
	local BRANCH=$1
	git stash
	git checkout -b $BRANCH $MASTER
	git stash pop
}

publish(){
	CUR_BRANCH=$(git rev-parse --abbrev-ref HEAD)
	BRANCH=${1:-$CUR_BRANCH}

	git hub-feature update $BRANCH

	git push --force $ORIGIN $BRANCH
}

update(){
	CUR_BRANCH=$(git rev-parse --abbrev-ref HEAD)
	_stash
	BRANCH=${1:-$CUR_BRANCH}

	git checkout $MASTER
	git pull --rebase $UPSTREAM $MASTER
	git checkout $BRANCH
	git rebase $MASTER

	if [ $CUR_BRANCH != $BRANCH ] ; then
		git checkout $CUR_BRANCH
	fi
	_stash_pop
}

review(){
	CUR_BRANCH=$(git rev-parse --abbrev-ref HEAD)
	BRANCH=${1:-$CUR_BRANCH}

	git hub-feature publish $BRANCH

	TITLE='"title":"'"$BRANCH: $(git log -1 --pretty=format:'%s')"'"'
	BODY='"body":"'"$(git log --pretty=format:'%h - %s <%an>' $MASTER.. | sed ':a;N;s/\n/\\n/g;b a')"'"'
	BASE='"base":"'"$GH_UPSTREAM_USER:$MASTER"'"'
	BASE_SHA='"base_sha":"'"$(git rev-parse $MASTER)"'"'
	HEAD='"head":"'"$GH_ORIGIN_USER:$BRANCH"'"'
	HEAD_SHA='"head_sha":"'"$(git rev-parse $BRANCH)"'"'

	echo "{$TITLE,$BODY,$BASE,$HEAD,$BASE_SHA,$HEAD_SHA}" >| .tmp_pr_req

	github /repos/$GH_UPSTREAM/pulls .tmp_pr_req >| .tmp_pr_res

	PULL_NUMBER=$(github_pr_number $BRANCH)
	PULL_URL="http://github.com/$GH_UPSTREAM/pull/$PULL_NUMBER"

	echo "Pull request is at $PULL_URL"

	rm .tmp_pr*
}

finish(){
	CUR_BRANCH=$(git rev-parse --abbrev-ref HEAD)
	BRANCH=${1:-$CUR_BRANCH}

	git hub-feature publish $BRANCH

	PULL_NUMBER=$(github_pr_number $BRANCH)

	github_put /repos/$GH_UPSTREAM/pulls/$PULL_NUMBER/merge "{}" >| .tmp_merge

	if [ "x$(cat .tmp_merge | json merged)" == "xtrue" ] ; then
		echo "Pull request $PULL_NUMBER successfully merged."
		_stash
		git checkout $MASTER
		git pull --rebase $UPSTREAM $MASTER
		git push $ORIGIN :$BRANCH
		git branch -D $BRANCH
		_stash_pop
	else
		cat .tmp_merge | json message
	fi

	rm .tmp_merge
}

usage(){
	echo "$0:	Manage a github flow features."
}

help(){
	usage
	echo ""
	echo "	start <branchname>: Begin working on a new feature."
	echo "	publish [branchname]: Publish branch to origin. Defaults to current branch."
	echo "	update [branchname]: Pull changes from upstream into the development branch,"
	echo "	                     then rebase the branch off development."
	echo "	review [branchname]: Create a pull request for a feature."
	echo "	finish [branchname]: Merge a pull request and clean up branches."
	echo "	help: Show this message."
}

command=${1:-usage}
shift
case "$command" in
	s | start) start $@ ;;
	p | publish) publish $@ ;;
	u | update) update $@ ;;
	r | review) review $@ ;;
	f | finish) finish $@ ;;
	h | help) help ;;
	*) usage ;;
esac